# -*- coding: utf-8 -*-
# Generated by Django 1.11.4 on 2017-08-04 23:10
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import jsonfield.fields
import model_utils.fields
import mptt.fields
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('taggit', '0002_auto_20150616_2121'),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Album',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('status', model_utils.fields.StatusField(choices=[('draft', '草稿'), ('published', '发布')], default='draft', max_length=100, no_check_for_status=True, verbose_name='status')),
                ('status_changed', model_utils.fields.MonitorField(default=django.utils.timezone.now, monitor='status', verbose_name='status changed')),
                ('title', models.CharField(default='', max_length=100, verbose_name='名称')),
                ('summary', models.TextField(default='', verbose_name='描述')),
                ('type', models.CharField(choices=[('ios', 'IOS'), ('android', 'Android')], max_length=50, verbose_name='类型')),
                ('cover', models.URLField(help_text='图片尺寸最好为720x240', null=True, verbose_name='封面')),
                ('likeCount', models.IntegerField(default='0', verbose_name='喜欢数')),
                ('picurl', jsonfield.fields.JSONField(blank=True, null=True, verbose_name='图片链接')),
                ('favCount', models.IntegerField(default='0', verbose_name='收藏数')),
            ],
            options={
                'verbose_name': '相册列表',
                'verbose_name_plural': '相册模块',
            },
        ),
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('status', model_utils.fields.StatusField(choices=[('draft', '草稿'), ('published', '发布')], default='draft', max_length=100, no_check_for_status=True, verbose_name='status')),
                ('status_changed', model_utils.fields.MonitorField(default=django.utils.timezone.now, monitor='status', verbose_name='status changed')),
                ('cover', models.URLField(help_text='图片尺寸最好为720x240', null=True, verbose_name='封面')),
                ('title', models.CharField(default='', max_length=100, verbose_name='标题')),
                ('summary', models.TextField(default='', verbose_name='描述')),
                ('content', models.TextField(default='', verbose_name='正文')),
                ('type', models.CharField(choices=[('ios', 'IOS'), ('android', 'Android')], max_length=50, verbose_name='类型')),
                ('picurl', jsonfield.fields.JSONField(blank=True, null=True, verbose_name='附件列表')),
                ('favCount', models.IntegerField(default='0', verbose_name='收藏数')),
                ('likeCount', models.IntegerField(default='0', verbose_name='喜欢数')),
            ],
            options={
                'verbose_name': '图文列表',
                'verbose_name_plural': '图文模块',
            },
        ),
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('name', models.CharField(max_length=64, verbose_name='模特名称')),
                ('cover', models.ImageField(blank=True, max_length=200, null=True, upload_to='author', verbose_name='模特图片')),
                ('total', models.IntegerField(blank=True, default=0, null=True, verbose_name='模特数')),
                ('order', models.PositiveIntegerField(default=999, editable=False, verbose_name='排序')),
            ],
            options={
                'verbose_name': '模特列表',
                'verbose_name_plural': '模特列表',
            },
        ),
        migrations.CreateModel(
            name='Catalog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, verbose_name='分类名称')),
                ('cover', models.ImageField(blank=True, max_length=200, null=True, upload_to='catalog', verbose_name='分类图片')),
                ('total', models.IntegerField(blank=True, default=0, null=True, verbose_name='图片数')),
                ('order', models.PositiveIntegerField(default=999, editable=False, verbose_name='排序')),
                ('lft', models.PositiveIntegerField(db_index=True, editable=False)),
                ('rght', models.PositiveIntegerField(db_index=True, editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(db_index=True, editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='resource.Catalog')),
            ],
            options={
                'verbose_name': '类别列表',
                'verbose_name_plural': '类别列表',
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('body', models.TextField(blank=True)),
                ('object_id', models.PositiveIntegerField()),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '评论列表',
                'verbose_name_plural': '评论模块',
            },
        ),
        migrations.CreateModel(
            name='Favorite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('object_id', models.PositiveIntegerField(blank=True, null=True)),
                ('content_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '收藏夹',
                'verbose_name_plural': '收藏夹',
            },
        ),
        migrations.CreateModel(
            name='SourceSite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='站点名称')),
                ('url', models.URLField(verbose_name='网址 URL')),
            ],
            options={
                'verbose_name': '采集源站',
                'verbose_name_plural': '采集源站',
            },
        ),
        migrations.CreateModel(
            name='Version',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('version', models.CharField(default='1.0.0', max_length=10, verbose_name='版本号')),
                ('depends', models.CharField(blank=True, max_length=10, null=True, verbose_name='依赖版本')),
                ('install', models.FileField(null=True, upload_to='versions', verbose_name='下载链接')),
                ('sha1sum', models.CharField(blank=True, max_length=64, null=True, verbose_name='校验码')),
                ('channel', models.CharField(choices=[('1000', '官网'), ('1001', '91助手'), ('1002', '百度'), ('1003', '安卓'), ('1004', '豌豆荚'), ('1005', '应用宝'), ('1006', '360'), ('1007', '应用汇'), ('1008', '魅族'), ('1009', 'N多网'), ('1010', 'PP助手'), ('1011', '淘宝'), ('1012', '机锋网'), ('1013', '金立'), ('1014', '小米'), ('1015', '华为'), ('1016', '搜狗'), ('1017', '安智'), ('1018', '沃商店'), ('1019', 'itools'), ('1020', '电信爱游戏'), ('1021', '优亿市场'), ('1022', '应用贝'), ('1023', 'googleplay'), ('1024', '安粉网')], max_length=10, verbose_name='渠道')),
                ('summary', models.TextField(default='', verbose_name='日志')),
                ('platform', models.CharField(choices=[('ios', 'IOS'), ('android', 'Android')], default='android', max_length=50, verbose_name='APP平台')),
                ('constraint', models.BooleanField(default=False, verbose_name='强更')),
            ],
            options={
                'verbose_name': '版本升级',
                'verbose_name_plural': '版本升级',
            },
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('status', model_utils.fields.StatusField(choices=[('draft', '草稿'), ('published', '发布')], default='draft', max_length=100, no_check_for_status=True, verbose_name='status')),
                ('status_changed', model_utils.fields.MonitorField(default=django.utils.timezone.now, monitor='status', verbose_name='status changed')),
                ('title', models.CharField(default='', max_length=100, verbose_name='视频名称')),
                ('summary', models.TextField(default='', verbose_name='视频描述')),
                ('type', models.CharField(choices=[('ios', 'IOS'), ('android', 'Android')], max_length=50, verbose_name='视频类型')),
                ('favCount', models.IntegerField(default='0', verbose_name='收藏数')),
                ('cover', models.URLField(help_text='图片尺寸最好为720x240', null=True, verbose_name='封面')),
                ('mp4url', jsonfield.fields.JSONField(blank=True, null=True, verbose_name='播放列表')),
                ('likeCount', models.IntegerField(default='0', verbose_name='喜欢数')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='resource.Catalog', verbose_name='类别')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='所有者')),
                ('tags', taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
            options={
                'verbose_name': '视频列表',
                'verbose_name_plural': '视频模块',
            },
        ),
        migrations.AlterUniqueTogether(
            name='version',
            unique_together=set([('version', 'channel')]),
        ),
        migrations.AddField(
            model_name='article',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='resource.Catalog', verbose_name='类别'),
        ),
        migrations.AddField(
            model_name='article',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='所有者'),
        ),
        migrations.AddField(
            model_name='article',
            name='tags',
            field=taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags'),
        ),
        migrations.AddField(
            model_name='album',
            name='category',
            field=models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, to='resource.Catalog', verbose_name='类别'),
        ),
        migrations.AddField(
            model_name='album',
            name='owner',
            field=models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='所有者'),
        ),
        migrations.AddField(
            model_name='album',
            name='tags',
            field=taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags'),
        ),
        migrations.AlterUniqueTogether(
            name='favorite',
            unique_together=set([('owner', 'object_id', 'content_type')]),
        ),
    ]
